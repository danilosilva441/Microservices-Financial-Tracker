# ==============================
# üåê NGINX TEMPLATE DIN√ÇMICO
# ==============================
# Este arquivo √© um "molde". As vari√°veis ${...} ser√£o substitu√≠das
# pelos valores do ambiente (Docker Compose ou Railway) durante a inicializa√ß√£o.

# --- Defini√ß√£o dos Endere√ßos dos Servi√ßos ---
# O 'upstream' √© como um apelido para o endere√ßo de cada servi√ßo.
upstream auth_service {
    # Valor padr√£o ':-' √© usado se a vari√°vel de ambiente n√£o for encontrada (√∫til para testes locais)
    server ${AUTH_SERVICE_URL:-auth_service:8080};
}

upstream billing_service {
    server ${BILLING_SERVICE_URL:-billing_service:8080};
}

upstream analysis_service {
    server ${ANALYSIS_SERVICE_URL:-analysis_service:3000};
}

upstream frontend {
    server ${FRONTEND_URL:-frontend:80};
}

# --- Configura√ß√£o do Servidor Principal (Gateway) ---
server {
    listen 80;

    # --- ROTA PARA O FRONTEND (REGRA GERAL) ---
    # Qualquer requisi√ß√£o que N√ÉO comece com /api/ cair√° aqui.
    location / {
        # Encaminha a requisi√ß√£o para o cont√™iner do frontend.
        proxy_pass http://frontend;

        # Cabe√ßalhos importantes para o frontend funcionar corretamente.
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # --- ROTA GERAL PARA A API ---
    # Qualquer requisi√ß√£o que comece com /api/ ser√° tratada aqui.
    location /api/ {
        # Cabe√ßalhos importantes para os servi√ßos de backend.
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # ROTEAMENTO ESPEC√çFICO: O Nginx processa estas regras 'if' primeiro.
        
        # Rotas do AuthService
        if ($uri ~* "^/api/(users|token|admin/promote-to-admin)") {
            proxy_pass http://auth_service;
            break; # Para de processar outras regras 'if'
        }

        # Rotas do AnalysisService
        if ($uri ~* "^/api/analysis") {
            # Remove o prefixo /api/analysis antes de passar para o servi√ßo Node.js
            rewrite ^/api/analysis/(.*)$ /$1 break;
            proxy_pass http://analysis_service;
            break; # Para de processar outras regras
        }

        # ROTA PADR√ÉO PARA A API:
        # Se nenhuma das regras 'if' acima corresponder, a requisi√ß√£o vai para o BillingService.
        proxy_pass http://billing_service;
    }
}