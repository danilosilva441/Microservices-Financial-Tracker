# ======================================
# üåê API GATEWAY - CONFIG FINAL (RAILWAY)
# ======================================
# Vers√£o: 2025-10-15
# Ambiente: Private Networking
# Fun√ß√£o: Centralizar APIs + Frontend
# ======================================

# --- Servi√ßos Internos ---
upstream auth_service {
    server ${AUTH_SERVICE_HOST}:${AUTH_SERVICE_PORT};
}

upstream billing_service {
    server ${BILLING_SERVICE_HOST}:${BILLING_SERVICE_PORT};
}

upstream analysis_service {
    server ${ANALYSIS_SERVICE_HOST}:${ANALYSIS_SERVICE_PORT};
}

upstream frontend_internal {
    server ${FRONTEND_HOST}:${FRONTEND_PORT};
}

# ==========================
# üîπ Servidor Principal
# ==========================
server {
    listen ${PORT};
    listen [::]:${PORT};
    server_name _;

    access_log /dev/stdout;
    error_log /dev/stderr;

    # --------------------------
    # ‚úÖ HEALTHCHECKS (RAILWAY)
    # --------------------------
    # Railway chama "/" por padr√£o, ent√£o retornamos 200 OK direto
    location = / {
        access_log off;
        add_header Content-Type text/plain;
        return 200 "healthy\n";
    }

    # /health tamb√©m funciona para testes manuais
    location = /health {
        access_log off;
        add_header Content-Type text/plain;
        return 200 "healthy\n";
    }

    # ==========================
    # üî∏ Rotas de API
    # ==========================
    location /api/ {
        # --- CORS ---
        add_header 'Access-Control-Allow-Origin' "$http_origin" always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,User-Agent,If-Modified-Since,Cache-Control,Range' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;

        if ($request_method = 'OPTIONS') {
            return 204;
        }

        # --- Sub-rotas espec√≠ficas ---
        location /api/users {
            proxy_pass http://auth_service;
        }

        location /api/token {
            proxy_pass http://auth_service;
        }

        location /api/billing {
            proxy_pass http://billing_service;
        }

        location /api/analysis {
            proxy_pass http://analysis_service;
        }

        # Fallback
        proxy_pass http://billing_service;
    }

    # ==========================
    # üî∏ FRONTEND (Vue.js)
    # ==========================
    location /app/ {
        proxy_pass http://frontend_internal;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        location ~* \.(?:ico|css|js|gif|jpe?g|png|woff2?|ttf|svg|eot)$ {
            expires 30d;
            access_log off;
            add_header Cache-Control "public";
        }

        error_page 404 = /app/index.html;
    }

    # ==========================
    # üî∏ SEGURAN√áA E PERFORMANCE
    # ==========================
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";
    add_header X-XSS-Protection "1; mode=block";

    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    send_timeout 60s;
}