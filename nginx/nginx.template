# ==============================
# üåê NGINX TEMPLATE DIN√ÇMICO
# ==============================

# Define os "endere√ßos" dos nossos servi√ßos (nomes do docker-compose ou Railway)
upstream auth_service {
    server ${AUTH_SERVICE_URL:-auth_service:8080};
}
upstream billing_service {
    server ${BILLING_SERVICE_URL:-billing_service:8080};
}
upstream analysis_service {
    server ${ANALYSIS_SERVICE_URL:-analysis_service:3000};
}
upstream frontend {
    server ${FRONTEND_URL:-frontend:80};
}

server {
    listen 80;

    # --- ROTA PARA O FRONTEND ---
    # Para qualquer requisi√ß√£o que n√£o comece com /api/, encaminha para o servi√ßo do frontend
    location / {
        proxy_pass http://frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # --- ROTA GERAL PARA A API ---
    # Qualquer requisi√ß√£o que comece com /api/ ser√° tratada aqui
    location /api/ {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # O Nginx tentar√° a rota mais espec√≠fica primeiro
        location /api/users { proxy_pass http://auth_service; }
        location /api/token { proxy_pass http://auth_service; }
        location /api/admin/promote-to-admin { proxy_pass http://auth_service; }
        
        location /api/analysis { 
            rewrite ^/api/analysis/(.*)$ /$1 break;
            proxy_pass http://analysis_service; 
        }

        # Para todas as outras rotas /api/, o padr√£o √© o BillingService
        proxy_pass http://billing_service;
    }
}