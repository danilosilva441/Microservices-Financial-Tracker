# Upstreams para os serviços. Os nomes aqui (auth_service, frontend)
# devem ser os nomes dos serviços na Railway ou no Docker Compose.
upstream auth_service {
    server auth_service:8080;
}
upstream billing_service {
    server billing_service:8080;
}
upstream analysis_service {
    server analysis_service:3000;
}
upstream frontend {
    # O Nginx dentro do contêiner do frontend escuta na porta 80
    server frontend:80;
}

server {
    listen 80;

    # --- Regra para a API ---
    # Qualquer requisição que comece com /api/ será tratada aqui
    location /api/ {
        # Headers importantes para o proxy reverso
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Regras de roteamento para os serviços de backend
        location /api/users { proxy_pass http://auth_service; }
        location /api/token { proxy_pass http://auth_service; }
        location /api/analysis { 
            rewrite ^/api/analysis/(.*)$ /$1 break;
            proxy_pass http://analysis_service; 
        }

        # Para todas as outras rotas /api/, o padrão é o BillingService
        proxy_pass http://billing_service;
    }

    # --- Regra para o Frontend ---
    # Para qualquer outra requisição, encaminha para o serviço do frontend
    location / {
        proxy_pass http://frontend;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}