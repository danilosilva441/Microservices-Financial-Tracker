# nginx.template (VERSÃO CORRIGIDA)

upstream auth_service {
    server ${AUTH_SERVICE_HOST}:${AUTH_SERVICE_PORT};
}

upstream billing_service {
    server ${BILLING_SERVICE_HOST}:${BILLING_SERVICE_PORT};
}

upstream analysis_service {
    server ${ANALYSIS_SERVICE_HOST}:${ANALYSIS_SERVICE_PORT};
}

upstream frontend {
    server ${FRONTEND_HOST}:${FRONTEND_PORT};
}

server {
    listen ${PORT};
    listen [::]:${PORT};
    server_name _;

    # --- HEALTH CHECK ---
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # --- ROTA PARA A API (CORRIGIDA) ---
    location /api/ {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        # Desativa redirecionamentos internos do proxy
        proxy_redirect off;
        
        # Roteamento específico
        location /api/users {
            proxy_pass http://auth_service;
        }
        
        location /api/token {
            proxy_pass http://auth_service;
        }
        
        location /api/admin/promote-to-admin {
            proxy_pass http://auth_service;
        }
        
        location /api/analysis {
            proxy_pass http://analysis_service;
        }
        
        location /api/operacoes {
            proxy_pass http://billing_service;
        }
        
        # Rota padrão para billing service
        proxy_pass http://billing_service;
    }

    # --- ROTA PARA O FRONTEND ---
    location / {
        # Página informativa enquanto frontend está offline
        if ($request_uri = /) {
            return 200 "API Gateway funcionando! Use /api/ para acessar os serviços.\n";
            add_header Content-Type text/plain;
        }
        
        proxy_pass http://frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }
}