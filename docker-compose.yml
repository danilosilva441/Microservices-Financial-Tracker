services:
  postgres_db:
    image: postgres:15-alpine
    container_name: portfolio_postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  auth_service:
    build: ./backend/AuthService
    container_name: auth_service
    restart: always
    depends_on:
      postgres_db:
        condition: service_healthy
    environment:
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres_db;Database=auth_db;Username=postgres;Password=admin
      - Jwt__Key=SUA_CHAVE_SECRETA_SUPER_LONGA_E_SEGURA_AQUI_123456
      - Jwt__Issuer=AuthService
      - Jwt__Audience=BillingService
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 20s

  billing_service:
    build: ./backend/BillingService
    container_name: billing_service
    restart: always
    depends_on:
      postgres_db:
        condition: service_healthy
    environment:
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres_db;Database=billing_db;Username=postgres;Password=admin
      - Jwt__Key=SUA_CHAVE_SECRETA_SUPER_LONGA_E_SEGURA_AQUI_123456
      - Jwt__Issuer=AuthService
      - Jwt__Audience=BillingService
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 20s

  analysis_service:
    build: ./backend/analysis_service
    container_name: analysis_service
    restart: always
    depends_on:
      - auth_service
      - billing_service
    environment:
      - DATABASE_URL=postgres://postgres:admin@postgres_db:5432/analysis_db
      - PORT=3000
      - SYSTEM_EMAIL=system@internal.service
      - SYSTEM_PASSWORD=UMA_SENHA_MUITO_FORTE_E_SEGURA_AQUI_123456
      - BILLING_SERVICE_URL=http://billing_service:8080
    # REMOVEMOS O HEALTHCHECK DELE PARA SIMPLIFICAR

  api_gateway:
    image: nginx:1.25-alpine
    container_name: api_gateway
    restart: always
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      auth_service:
        condition: service_healthy
      billing_service:
        condition: service_healthy
      # O gateway só precisa esperar o contêiner do analysis existir,
      # não precisa que ele esteja 'healthy'
      analysis_service:
        condition: service_started

volumes:
  postgres_data: