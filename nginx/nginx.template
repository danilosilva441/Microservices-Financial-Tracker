# nginx/nginx.template (CONFIGURAÇÃO FINAL CORRIGIDA)

# --- Definição dos Endereços dos Serviços ---
upstream auth_service {
    server ${AUTH_SERVICE_HOST}:${AUTH_SERVICE_PORT};
}
upstream billing_service {
    server ${BILLING_SERVICE_HOST}:${BILLING_SERVICE_PORT};
}
upstream analysis_service {
    server ${ANALYSIS_SERVICE_HOST}:${ANALYSIS_SERVICE_PORT};
}

# --- CORREÇÃO: Frontend com HTTP interno ---
upstream frontend {
    server ${FRONTEND_HOST}:${FRONTEND_PORT};
}

server {
    listen ${PORT};
    listen [::]:${PORT};
    server_name _;

    location / {
        root   /usr/share/nginx/html;
        index  index.html;
        try_files $uri $uri/ /index.html;
    }

    # --- Configurações de CORS e Headers Gerais ---
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # --- Health Check ---
    location /health {
        access_log off;
        add_header Content-Type text/plain;
        return 200 "healthy\n";
    }

    # --- ROTA PARA A API ---
    location /api/ {
        # Configurações CORS
        add_header 'Access-Control-Allow-Origin' "$http_origin" always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' "$http_origin";
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # Roteamento da API
        location /api/users {
            proxy_pass http://auth_service;
        }
        
        location /api/token {
            proxy_pass http://auth_service;
        }
        
        location /api/admin/promote-to-admin {
            proxy_pass http://auth_service;
        }
        
        location /api/analysis {
            proxy_pass http://analysis_service;
        }
        
        proxy_pass http://billing_service;
    }

    # --- CORREÇÃO: Rota para Frontend com HTTP interno ---
    location / {
        # CORREÇÃO CRÍTICA: Headers para evitar redirecionamento HTTPS
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Header específico para evitar redirecionamento
        proxy_set_header X-Forwarded-Scheme $scheme;
        
        # Conecta via HTTP interno (não HTTPS)
        proxy_pass http://frontend;
        
        # Timeouts adequados
        proxy_connect_timeout 10s;
        proxy_send_timeout 15s;
        proxy_read_timeout 20s;
        
        # Headers padrão
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}